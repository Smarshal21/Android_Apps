// Generated by Dagger (https://dagger.dev).
package com.sammycode.notesample.ui.login;

import com.sammycode.notesample.utils.TokenManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RegisterFragment_MembersInjector implements MembersInjector<RegisterFragment> {
  private final Provider<TokenManager> tokenManagerProvider;

  public RegisterFragment_MembersInjector(Provider<TokenManager> tokenManagerProvider) {
    this.tokenManagerProvider = tokenManagerProvider;
  }

  public static MembersInjector<RegisterFragment> create(
      Provider<TokenManager> tokenManagerProvider) {
    return new RegisterFragment_MembersInjector(tokenManagerProvider);
  }

  @Override
  public void injectMembers(RegisterFragment instance) {
    injectTokenManager(instance, tokenManagerProvider.get());
  }

  @InjectedFieldSignature("com.sammycode.notesample.ui.login.RegisterFragment.tokenManager")
  public static void injectTokenManager(RegisterFragment instance, TokenManager tokenManager) {
    instance.tokenManager = tokenManager;
  }
}
